openapi: 3.0.0
info:
  title: Sanctions List API
  version: '1.0'
  description: "### Introduction\ncubemos Sanctions list API is a RESTful API which can be used to avoid prosecution and be compliant with international regulation on sanctions, AML and financial crime. \n\n### Features\n1. Easy integration\n2. Example code for various languages\n3. Strict and fuzzy search \n4. Batch search \n\n### Supported Sanction Lists\n1. EU Financial Sanctions List\n2. UN Sanctions List\n3. Politically Exposed Persons"
  contact:
    name: cubemos gmbh
    url: www.cubemos.com
    email: meet@cubemos.com
  license:
    name: cubemos license
  termsOfService: 'https://www.cubemos.com/general-terms/'
servers:
  - url: api.cubemos.com
    description: ''
paths:
  /search/entities/person:
    post:
      summary: Search for a person through sanction lists
      operationId: post-search-entities-organizations
      responses:
        '200':
          description: 'The request was created successfully and the results are available as an array. If the array is empty, there were no matching persons found in the desired sanction lists.'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personSearchResult'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: "### Search a person through sanction lists\nThis API call allows you to perform a search through the desired sanction lists for a person. The search results returned are a list of all entries from the sanction lists which match to the input along with the degree of the match. "
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personSearch'
            examples:
              Example:
                value:
                  person_search:
                    full_name: john junior senior smith
                    first_names: john
                    middle_names: junior senior
                    last_names: smith
                    aliases:
                      - don john
                      - godfather
                    gender: male
                    dob: 01.01.1950
                    nationalities: DE
                    sanction_lists:
                      - UN-Sanctions List
                      - EU-Financial Sanctions List
                  advanced_attributes:
                    title: Prime minister of a country
                    full_address: 'Herman Straße 2, 12345 Berlin, Germany'
                    dob_year_ambiguity:
                      - '1950'
                      - '1952'
                    must_attributes: 'full_name, dob'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
        description: |-
          ### Payload request schema for single search
          In order to perform a search on a person through the sanction lists, the full name and the desired sanction lists are required. This would return a list with all the possible matches with a score of the match. Advanced attributes can be provided in order to make the search results stricter.
      parameters: []
    parameters: []
  /search/entities/organization:
    post:
      summary: Search for an organization through sanction lists
      operationId: post-search-entities-organizations
      responses:
        '200':
          description: 'The request was created successfully and the results are available as an array. If the array is empty, there were no matching organization found in the desired sanction lists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizationSearchResult'
          headers: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationSearch'
            examples:
              Example:
                value:
                  sanction_list:
                    - UN-Sanctions List
                    - EU-Financial Sanctions List
                  basic:
                    organization_name: cubemos gmbh
                    country_code: DE
                  advanced:
                    address:
                      country_code: DE
                      zip_code: 82024
                      city: Munich
                      street: Mehlbeerenstraße 2
                    headquarter_country: DE
        description: |-
          ### Payload request schema for single search
          In order to perform a search on an organization through the sanction lists, the name and the desired sanction lists are required. This would return a list with all the possible matches with a score of the match. Advanced attributes can be provided in order to make the search results stricter.
      description: "### Search an organization through sanction lists\nThis API call allows you to perform a search through the desired sanction lists for an organization. The search results returned are a list of all entries from the sanction lists which match to the input along with the degree of the match. "
    parameters: []
  /search/location/address:
    post:
      summary: Search for an entity based on an address through sanction lists
      operationId: post-search-address-geo
      responses:
        '200':
          description: 'The request was created successfully and the results are available as an array. If the array is empty, there were no matching persons found in the desired sanction lists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationSearchResult'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addressSearch'
            examples:
              Example:
                value:
                  sanction_lists:
                    - EU-financial sanctions list
                    - UN-sanctions list
                  address:
                    country: DE
                    zip_code: 12345
                    city: Berlin
                    street: Hermann Straße 1
        description: "### Payload request scheme for single search\nIn order to search for a location bassed on the address, the sanction lists as well as the address details are required. Additional address lines can be placed into the advanced search attributes. The resulting payload consists of all the entities found at the address with their respective match scores. Please note that the higher the ambiguity in input, the bigger could be the output response payload.  "
      description: "### Search on an entity through the desired sanction lists in at an address\nThis API call allows you to perform a search through the desired sanction lists for any entity at the desired location. The search results returned are a list of all entries from the sanction lists which match to the input along with the degree of the match. "
    parameters: []
  /batchsearch/entities/person:
    post:
      summary: Search for multiple persons through sanction lists
      operationId: post-bulksearch-entities-person
      responses:
        '200':
          description: 'The request was created successfully and the results are available as an array. If the array is empty, there were no matching persons found in the desired sanction lists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personBatchSearchResult'
      description: "### Searches for multiple persons at a time through the sanction lists\nThis API call allows you to perform a batch search for multiple persons through the desired sanction lists. The search results returned are a list of list of all entries from the sanction lists which match to the input along with the degree of the match. "
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personBatchSearch'
            examples:
              Example:
                value:
                  indices:
                    - 0
                  persons:
                    - person_search:
                        full_name: john junior senior smith
                        first_names: john
                        middle_names: junior senior
                        last_names: smith
                        aliases: 'don john, godfather'
                        gender: male
                        dob: 01.01.1950
                        nationalities: US
                        sanction_lists:
                          - UN-Sanctions List
                          - EU-Financial Sanctions List
                      advanced_attributes:
                        title: Prime minister of a country
                        full_address: '12, street, 12345 city, country'
                        dob_year_ambiguity: '1950, 1952'
                        must_attributes: 'full_name, dob'
                    - person_search:
                        full_name: john senior smith
                        first_names: john
                        middle_names: senior
                        last_names: smith
                        aliases: 'grandmaster, godfather the supreme'
                        gender: male
                        dob: 01.01.1920
                        nationalities: US
                        sanction_lists:
                          - UN-Sanctions List
                          - EU-Financial Sanctions List
                      advanced_attributes:
                        title: Prime minister of a country
                        full_address: '12, street, 12345 city, country'
                        dob_year_ambiguity: '1910, 1920'
                        must_attributes: 'full_name, dob'
          application/xml:
            schema:
              $ref: '#/components/schemas/personBulkSearch'
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: |-
          ### Payload request schema for single search
          In order to perform a search on a batch of persons through the sanction lists, the full name and the desired sanction lists are required. Additionally, a unique index has to be allocated to each person to which the results would be mapped as well. The search returns a list with all the possible matches with a score of the match. Advanced attributes can be provided in order to make the search results stricter.
      parameters: []
    parameters: []
  /search/location/geo:
    post:
      summary: Search for an entity based on geographical co-ordinates through sanction list
      operationId: post-search-location-geo
      responses:
        '200':
          description: 'The request was created successfully and the results are available as an array. If the array is empty, there were no matching entities were found in the desired sanction lists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationSearchResult'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/geoSearch'
            examples:
              Example:
                value:
                  sanction_lists:
                    - EU-financial sanctions list
                    - UN-sanctions list
                  geo:
                    latitude: 0.1234
                    logitude: 0.1234
                    radius: 500
        description: "### Payload request scheme for single search\nIn order to search for a location bassed on the geographical co-ordinates, the sanction lists as well as precise co-ordinates are required. The resulting payload consists of all the entities found at the address with their respective match scores. Please note that the higher the search radius, the bigger could be the output response payload.  "
      description: "### Search on an entity through the desired sanction lists in a radius around a geographical co-ordinate\nThis API call allows you to perform a search through the desired sanction lists for any entity at the desired location. The search results returned are a list of all entries from the sanction lists which match to the input along with the degree of the match. "
      parameters: []
  /batchsearch/entities/organization:
    post:
      summary: Search for multiple organizations through sanction lists
      operationId: post-batchsearch-entities-organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organizationBatchSearchResult'
      description: "### Searches for multiple organizations at a time through the sanction lists\nThis API call allows you to perform a batch search for multiple organizations through the desired sanction lists. The search results returned are a list of list of all entries from the sanction lists which match to the input along with the degree of the match. "
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationBatchSearch'
            examples:
              Example:
                value:
                  indices:
                    - 0
                  organizations:
                    - sanction_lists:
                        - EU-Financial Sanctions List
                        - UN-Sanctions List
                      basic_attributes:
                        organization_name: cubemos gmbh
                        country_code: string
                      advanced_attributes:
                        address:
                          country_code: DE
                          zip_code: 82024
                          city: Munich
                          street: Mehlbeeren straße 2
                        headquarter_country: DE
                    - sanction_lists:
                        - EU-Financial Sanctions List
                        - UN-Sanctions List
                      basic_attributes:
                        organization_name: framos gmbh
                        country_code: string
                      advanced_attributes:
                        address:
                          country_code: DE
                          zip_code: 82024
                          city: Munich
                          street: Mehlbeeren straße 2
                        headquarter_country: DE
        description: |-
          ### Payload request schema for batch search
          In order to perform a search on multiple organizations through the sanction lists, the name and the desired sanction lists are required. Additionally, a unique index has to be assigned to each organization searched for in order to map the results to it in the output payload. The search returns a list with all the possible matches with a score. Advanced attributes can be provided in order to make the search results stricter.
components:
  schemas:
    personBasicSearch:
      title: personBasicSearch
      type: object
      description: Basic search identifiers for a person through a sanction list
      x-examples: {}
      properties:
        full_name:
          type: string
          description: Full name of a person (first_names + middle_names + last_names )
          example: john junior senior smith
        first_names:
          type: string
          description: All the first names of the person
          example: john
        middle_names:
          type: string
          description: All the middle names of the person
          example: junior senior
        last_names:
          type: string
          description: All the last names of the person
          example: smith
        aliases:
          type: array
          description: 'All the aliases of the person as an array '
          example: 'don john, godfather'
          uniqueItems: true
          items:
            type: string
        gender:
          type: string
          description: 'Gender of the person '
          example: male
        dob:
          type: string
          description: Date of birth of the person
          example: 01.01.1950
        nationalities:
          type: array
          description: Nationalities of the person as an array of 2 letter ISO country code
          example: USA
          items:
            type: string
      required:
        - full_name
    personAdvancedsearch:
      title: personAdvancedSearch
      type: object
      description: Advanced search for a person through a sanction list
      properties:
        title:
          type: string
          description: Job title or positional title held by the person
          example: Prime minister of a country
        full_address:
          type: string
          example: '12, street, 12345 city, country'
          description: Full address as a string from door number to country
        dob_year_ambiguity:
          type: array
          description: Possible birth years if the date of birth is not clear
          example: '1950, 1952'
          items:
            type: integer
        must_attributes:
          type: array
          description: |-
            Identifiers of the entry fields against which the match similarity has to be 100% in the results
            The identifiers can be from the basic fields and advanced fields
          example: 'full_name, dob'
          items:
            type: string
    personSearch:
      title: personSearch
      type: object
      description: The identifiers based on which the search will be performed for a person through the desired sanction lists
      x-examples: {}
      properties:
        sanction_lists:
          type: array
          description: All the sanction lists as an array through which the search has to be made
          items:
            type: string
        basic_attributes:
          $ref: '#/components/schemas/personBasicSearch'
        advanced_attributes:
          $ref: '#/components/schemas/personAdvancedsearch'
    personSearchResult:
      title: personSearchResult
      description: Response payload for the query on a person through the desired sanction lists
      type: object
      properties:
        persons_identified:
          type: integer
          description: Number of persons identified matching to the input query
        persons:
          type: array
          items:
            $ref: '#/components/schemas/person'
    sanctionListEntryPerUid:
      title: sanctionListEntryPerUid
      type: object
      description: List of raw entries from the sanction lists in which the result has been matched
      properties:
        number_of_entries:
          type: integer
          description: number of entries with the same unique id in the sanction list
        array_of_list_entries:
          type: array
          description: raw entries from the sanction list
          items:
            type: string
        sanction_list:
          type: string
          description: The sanction list in which a valid result was found
        match_score:
          type: number
          description: The probability of the match denoted as a score between 0 and 1
    organizationBasicSearch:
      title: organizationBasicSearch
      type: object
      description: Basic search identifiers for an organization through a sanction list
      properties:
        organization_name:
          type: string
          example: cubemos gmbh
          description: Name of the organization for which the search through sanction lists has to be made
        country_code:
          type: string
          description: ISO country code in which the organization is located
      required:
        - organization_name
    organizationAdvancedsearch:
      title: organizationAdvancedSearch
      type: object
      description: Advanced search for an organization through a sanction list
      properties:
        address:
          $ref: '#/components/schemas/address'
        headquarter_country:
          type: string
          description: ISO country code of the place where the headquarters of the organization is located
    organizationSearch:
      title: organizationSearch
      type: object
      description: The identifiers based on which the search will be performed for a organization through the desired sanction lists
      properties:
        sanction_lists:
          type: array
          description: Sanction lists through which the search has to be made
          items:
            type: string
        basic_attributes:
          $ref: '#/components/schemas/organizationBasicSearch'
        advanced_attributes:
          $ref: '#/components/schemas/organizationAdvancedsearch'
      required:
        - sanction_lists
    organization:
      title: organization
      type: object
      description: organization details
      properties:
        name:
          type: string
          description: Sanction lists in which the results were found
        address:
          $ref: '#/components/schemas/address'
        headquarter_country:
          description: |
            Match similarity for each search result corresponding to the sanction list
          type: string
        aliases:
          type: array
          description: "List of aliases that the organization has for it's name. "
          items:
            type: string
        sanction_lists:
          type: array
          items:
            $ref: '#/components/schemas/sanctionListEntryPerUid'
    geo:
      title: geo
      type: object
      description: Basic search identifiers for an entity through a sanction list based on geographical co-ordinates
      properties:
        latitude:
          type: number
          description: The latitude of the location
        logitude:
          type: number
          description: The longitude of the location
        radius:
          type: integer
          description: Search radius around the input latitude and logitude in meters
      required:
        - latitude
        - logitude
        - radius
    organizationSearchResult:
      title: organizationSearchResult
      type: object
      description: Response payload for the query on a organization through the desired sanction lists
      properties:
        organizations_identified:
          description: Number of organizations found
          type: integer
        organizations:
          $ref: '#/components/schemas/organization'
    locationSearchResult:
      title: locationSearchResult
      type: object
      description: Response of a search query based on geographical co-ordinates through the desired sanction lists
      properties:
        number_of_matches:
          description: Indicates what type of an entity is searched for
          type: integer
        persons:
          $ref: '#/components/schemas/personSearchResult'
        organizations:
          $ref: '#/components/schemas/organizationSearchResult'
      required:
        - number_of_matches
    personBatchSearch:
      title: personBatchSearch
      type: object
      description: Batch search payload for persons
      properties:
        indices:
          type: array
          description: Index assigned to each person being searched for
          items:
            type: integer
        persons:
          type: array
          items:
            $ref: '#/components/schemas/personSearch'
    personBatchSearchResult:
      title: personBatchSearchResult
      type: object
      description: Response payload of the batch search on persons
      properties:
        indices:
          type: array
          description: Unique index corresponding to each person searched for and for which the results could be found
          items:
            type: integer
        persons_results:
          type: array
          items:
            $ref: '#/components/schemas/personSearchResult'
    addressSearch:
      title: addressSearch
      type: object
      description: query payload for an address search
      x-examples: {}
      properties:
        sanction_lists:
          type: array
          description: Sanction lists through which the search has to be made
          items:
            type: string
        address:
          $ref: '#/components/schemas/address'
        advanced_attribute:
          type: object
          properties:
            additional_address_lines:
              type: array
              description: Additional address lines to search for
              items:
                type: string
      required:
        - sanction_lists
        - address
    person:
      title: person
      type: object
      properties:
        first_name:
          type: string
          description: First name of the query
        middle_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          description: Date of birth of the person
        gender:
          type: string
          description: Gender of the person
        aliases:
          type: array
          description: List of all the aliases that the person has
          items:
            type: string
        nationalities:
          type: array
          description: Nationalities of a person denoted as by their respective ISO country codes
          items:
            type: string
        sanction_lists:
          type: array
          items:
            $ref: '#/components/schemas/sanctionListEntryPerUid'
      description: person details
    address:
      title: address
      type: object
      description: Basic search identifiers for an entity through a sanction list based on an address
      properties:
        country_code:
          type: string
          description: '2 digit ISO country code '
        zip_code:
          type: integer
          description: 'Zip code of the area '
        city:
          type: string
          description: Name of the city
        street:
          type: string
          description: Name of the street
    geoSearch:
      title: geoSearch
      type: object
      description: query payload for an geo search
      properties:
        sanction_lists:
          type: array
          description: The sanction lists through which the search has to be made
          items:
            type: string
        geo:
          $ref: '#/components/schemas/geo'
      required:
        - sanction_lists
        - geo
    organizationBatchSearch:
      title: organizationBatchSearch
      type: object
      properties:
        indices:
          type: array
          description: Index assigned to each person being searched for
          items:
            type: integer
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/organizationSearch'
      description: query payload for batch search on organizations
    organizationBatchSearchResult:
      title: organizationBulkSearchResult
      type: object
      description: response payload of batch search on organisations
      properties:
        indices:
          type: array
          description: Unique index corresponding to each person searched for and for which the results could be found
          items:
            type: integer
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/organizationSearchResult'
  securitySchemes:
    cubemos_api_key:
      name: API Key
      type: apiKey
      in: query
